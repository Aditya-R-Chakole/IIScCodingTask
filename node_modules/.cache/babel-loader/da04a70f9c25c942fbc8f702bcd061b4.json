{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"F:\\\\IISc-CiSTUP-2022-Summer-Internship\\\\coding-task\\\\src\\\\components\\\\Map.js\";\n\nimport React from \"react\";\nimport numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\";\nimport { MapContainer as LeafletMap, TileLayer } from \"react-leaflet\";\nimport \"./Map.css\";\nvar casesTypeColors = {\n  cases: {\n    hex: \"#4056a1\",\n    multiplier: 400\n  },\n  recovered: {\n    hex: \"#4056a1\",\n    multiplier: 600\n  },\n  deaths: {\n    hex: \"#4056a1\",\n    multiplier: 2000\n  }\n};\n\nvar showDataOnMap = function showDataOnMap(data) {\n  var casesType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"cases\";\n  return data.map(function (country) {\n    return /*#__PURE__*/React.createElement(Circle, {\n      center: [country.countryInfo.lat, country.countryInfo.long],\n      color: casesTypeColors[casesType].hex,\n      fillColor: casesTypeColors[casesType].hex,\n      fillOpacity: 0.2,\n      radius: Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-flag\",\n      style: {\n        backgroundImage: \"url(\".concat(country.countryInfo.flag, \")\")\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, country.country), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-confirmed\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, \"Cases:\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \", numeral(country.cases).format(\"0,0\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-recovered\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, \"Recovered: \", numeral(country.recovered).format(\"0,0\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-deaths\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, \"Deaths:\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \", numeral(country.deaths).format(\"0,0\")))));\n  });\n};\n\nfunction Map(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LeafletMap, {\n    center: props.mapCenter,\n    zoom: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), showDataOnMap(props.countryData, props.casesType)));\n}\n\nexport default Map;","map":{"version":3,"sources":["F:/IISc-CiSTUP-2022-Summer-Internship/coding-task/src/components/Map.js"],"names":["React","numeral","Circle","Popup","MapContainer","LeafletMap","TileLayer","casesTypeColors","cases","hex","multiplier","recovered","deaths","showDataOnMap","data","casesType","map","country","countryInfo","lat","long","Math","sqrt","backgroundImage","flag","format","Map","props","mapCenter","countryData"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport numeral from \"numeral\";\r\nimport { Circle, Popup } from \"react-leaflet\";\r\n\r\nimport { MapContainer as LeafletMap, TileLayer } from \"react-leaflet\";\r\nimport \"./Map.css\";\r\n\r\nconst casesTypeColors = {\r\n  cases: {\r\n    hex: \"#4056a1\",\r\n    multiplier: 400,\r\n  },\r\n  recovered: {\r\n    hex: \"#4056a1\",\r\n    multiplier: 600,\r\n  },\r\n  deaths: {\r\n    hex: \"#4056a1\",\r\n    multiplier: 2000,\r\n  },\r\n};\r\n\r\nconst showDataOnMap = (data, casesType = \"cases\") =>\r\n  data.map((country) => (\r\n    <Circle\r\n      center={[country.countryInfo.lat, country.countryInfo.long]}\r\n      color={casesTypeColors[casesType].hex}\r\n      fillColor={casesTypeColors[casesType].hex}\r\n      fillOpacity={0.2}\r\n      radius={\r\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\r\n      }\r\n    >\r\n      <Popup>\r\n        <div className=\"info-container\">\r\n          <div\r\n            className=\"info-flag\"\r\n            style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\r\n          ></div>\r\n          <div className=\"info-name\">\r\n            {country.country}\r\n          </div>\r\n          <div className=\"info-confirmed\">\r\n            Cases:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {numeral(country.cases).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-recovered\">\r\n            Recovered: {numeral(country.recovered).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-deaths\">\r\n            Deaths:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {numeral(country.deaths).format(\"0,0\")}\r\n          </div>\r\n        </div>\r\n      </Popup>\r\n    </Circle>\r\n  ));\r\n\r\n\r\nfunction Map(props) {\r\n  return (\r\n    <div className=\"map\">\r\n      <LeafletMap center={props.mapCenter} zoom={3}>\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        {showDataOnMap(props.countryData, props.casesType)}\r\n      </LeafletMap>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;"]},"metadata":{},"sourceType":"module"}